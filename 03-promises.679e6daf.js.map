{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAcC,SAASC,cAAc,SACrCC,EAAaH,EAAYE,cAAc,uBACvCE,EAAgBJ,EAAYE,cAAc,sBAC1CG,EAAcL,EAAYE,cAAc,wBAE9C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPR,EAAYgB,iBAAiB,UAAU,SAAAC,GACrCA,EAAEC,iBAKF,IAJA,IAAIC,EAAaC,OAAOjB,EAAWkB,OAC7BC,EAAYF,OAAOhB,EAAciB,OACjCE,EAASH,OAAOf,EAAYgB,OAC9BG,EAAQL,EAAaG,EAChBG,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAGlCnB,EAFiBmB,EAAI,EACrBD,GAASF,GAENI,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAGjDwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAInDR,EAAYkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formPromise = document.querySelector('.form');\nconst inputDelay = formPromise.querySelector('input[name=\"delay\"]');\nconst inputPosition = formPromise.querySelector('input[name=\"step\"]');\nconst inputAmount = formPromise.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformPromise.addEventListener('submit', e => {\n  e.preventDefault();\n  let firstDelay = Number(inputDelay.value);\n  const delayStep = Number(inputPosition.value);\n  const amount = Number(inputAmount.value);\n  let delay = firstDelay - delayStep;\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n    delay += delayStep;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  formPromise.reset();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formPromise","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputPosition","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","amount","delay1","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.679e6daf.js.map"}